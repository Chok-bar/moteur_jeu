syntax = "proto3";

service GameServer {
  rpc GameList (GameListRequest) returns (GameListReply) {}
  rpc GameSubscribe (GameSubscribeRequest) returns (GameSubscribeReply) {}
  rpc GetGameStatus (GetGameStatusRequest) returns (GetGameStatusReply) {}
  rpc GetGameboardStatus (GetGameboardStatusRequest) returns (GetGameboardStatusReply) {}
  rpc Move (MoveRequest) returns (MoveResponse) {}
}

enum Role {
  Wolf = 0;
  Villager = 1;
}

message GameListRequest {}

message GameListReply {
  bool status = 1;
  repeated int32 id_games = 2;
}

message GameSubscribeRequest {
  string player = 1;
  int32 id_game = 2;
}

message GameSubscribeReply {
  bool status = 1;
  Role role = 2;
  int32 id_player = 3;
}

message GetGameStatusRequest {
  int32 id_player = 1;
  int32 id_game = 2;
}

message GetGameStatusReply {
  bool status = 1;
  Game party = 2;
}

message Game {
  int32 id_game = 1;
  int32 id_player = 2;
  bool started = 3;
  int32 round_in_progress = 4;
  Move move = 5;
}

message Move {
  Position next_position = 1;
}

message Position {
  int32 row = 1; // -1, 0, ou 1
  int32 col = 2; // -1, 0, ou 1
}

message GetGameboardStatusRequest {
  int32 id_party = 1;
  int32 id_player = 2;
}

message GetGameboardStatusReply {
  bool status = 1;
  string visible_cells = 2; // "010010000"
}

message MoveRequest {
  int32 id_party = 1;
  int32 id_player = 2;
  string move = 3; // e.g., "01" for vector movement
}

message MoveResponse {
  bool status = 1;
  int32 round_in_progress = 2; // -1 if no round in progress
  Move move = 3;
}